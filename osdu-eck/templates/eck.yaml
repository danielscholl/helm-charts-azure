{{- $list := split "," .Values.dataPartitions}}
{{- $nodepoolPrefix := .Values.nodepoolNamePrefix}}
{{- $memLimit := .Values.resources.limits.memory}}
{{- $cpuReq := .Values.resources.requests.cpu}}
{{- $cpuLimit := .Values.resources.limits.cpu}}
{{- $esVersion := .Values.elasticsearch.version}}
{{- $esNodeCount := .Values.elasticsearch.nodeCount}}
{{- $esNodeStorage := .Values.elasticsearch.storagePerNodeGB}}
{{- $storageAccountName := .Values.elasticsearch.snapshot.storageAccountName}}
{{- $storageAccountKey := .Values.elasticsearch.snapshot.storageAccountKey}}
{{- range $index, $datapartition := $list}}
---
apiVersion: v1
kind: Namespace
metadata:
  name: "es-{{ lower $datapartition }}"
  labels:
    name: "es-{{ lower $datapartition }}"
    istio-injection: enabled
---
{{- if not (empty $storageAccountName) }}
apiVersion: v1
kind: Secret
metadata:
  name: azure-snapshot-secrets
  namespace: "es-{{ lower $datapartition }}"
type: Opaque
data:
  azure.client.default.account: {{ b64enc $storageAccountName }}
  azure.client.default.key: {{ b64enc $storageAccountKey }}
---
{{- end }}
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: "elasticsearch"
  namespace: "es-{{ lower $datapartition }}"
  annotations:
    eck.k8s.elastic.co/downward-node-labels: "topology.kubernetes.io/zone"
spec:
  version: {{ $esVersion }}
  {{- if not (empty $storageAccountName) }}
  secureSettings:
  - secretName: azure-snapshot-secrets
  {{- end }}
  http:
    tls:
      selfSignedCertificate:
        disabled: true
    service:
      spec:
        type: ClusterIP
  nodeSets:
    - name: default
      count: {{ $esNodeCount }}
      volumeClaimTemplates:
        - metadata:
            name: elasticsearch-data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ $esNodeStorage }}Gi
            storageClassName: managed-premium
      config:
        node.master: true
        node.data: true
        node.ingest: true
        node.store.allow_mmap: false
        node.attr.zone: ${ZONE}
        cluster.routing.allocation.awareness.attributes: k8s_node_name,zone
      podTemplate:
        metadata:
          annotations:
            traffic.sidecar.istio.io/includeInboundPorts: "*"
            traffic.sidecar.istio.io/excludeOutboundPorts: "9300"
            traffic.sidecar.istio.io/excludeInboundPorts: "9300"
        spec:
        {{- if not (empty $storageAccountName) }}
          initContainers:
          - name: elastic-internal-init-keystore
            securityContext:
                runAsUser: 1000
                runAsGroup: 1000
            env:
            - name: ZONE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['topology.kubernetes.io/zone']
          - name: install-plugins
            env:
            - name: ZONE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['topology.kubernetes.io/zone']
            command:
            - sh
            - -c
            - |
              bin/elasticsearch-plugin install --batch repository-azure
        {{- end }}
          tolerations:
          - key: "sku"
            operator: "Equal"
            value: "es"
            effect: "NoSchedule"
          nodeSelector:
            agentpool: {{ $nodepoolPrefix }}{{ trimPrefix "_" $index }}
          containers:
          - name: elasticsearch
            env:
            - name: ES_JAVA_OPTS
              value: "-Xms{{ div $memLimit 2 }}g -Xmx{{ div $memLimit 2 }}g -XX:+UseG1GC"
            - name: ZONE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['topology.kubernetes.io/zone']
            resources:
              requests:
                cpu: {{ $cpuReq }}
              limits:
                memory: {{ $memLimit }}Gi
                cpu: {{ $cpuLimit }}
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: topology.kubernetes.io/zone
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  elasticsearch.k8s.elastic.co/cluster-name: elasticsearch
                  elasticsearch.k8s.elastic.co/statefulset-name: elasticsearch-es-default
{{- end}}
