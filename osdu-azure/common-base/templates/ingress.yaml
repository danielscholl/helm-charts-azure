{{- $namespace := .Release.Namespace }}
{{- $svcPort := .Values.global.service.port -}}
{{- $release := .Release.name -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: common-ingress
  namespace: {{ $namespace }}
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
    appgw.ingress.kubernetes.io/request-timeout: "300"
    appgw.ingress.kubernetes.io/connection-draining: "true"
    appgw.ingress.kubernetes.io/connection-draining-timeout: "30"
    {{- if .Values.global.ingress.enableKeyvaultCert }}
    appgw.ingress.kubernetes.io/appgw-ssl-certificate: "appgw-ssl-cert"
    {{- else }}
    cert-manager.io/cluster-issuer: {{ .Values.global.ingress.issuer }}
    cert-manager.io/acme-challenge-type: http01
    {{- end }}
spec:
  {{- if not .Values.global.ingress.enableKeyvaultCert }}
  tls:
  - hosts:
    - {{ .Values.global.ingress.dns }}
    secretName: osdu-certificate
  {{- end }}
  rules:
    - host: {{ .Values.global.ingress.dns }}
      http:
        paths:
        {{- range .Values.configuration }}
        - path: {{ .path }}
          pathType: {{ .pathType }}
          backend:
            service:
              name: {{ .service }}
              port:
                number: {{ $svcPort }}
        {{- end }}
        - path: /api/storage/v2/*
          backend:
            serviceName: storage
            servicePort: 80
        - backend:
            serviceName: default
            servicePort: 80
          path: /*
        - backend:
            serviceName: legal
            servicePort: 80
          path: /api/legal/v1/*
        - backend:
            serviceName: crs-catalog
            servicePort: 80
          path: /api/crs/catalog/*
        - backend:
            serviceName: crs-conversion
            servicePort: 80
          path: /api/crs/converter/*
        - backend:
            serviceName: unit
            servicePort: 80
          path: /api/unit/*
        - backend:
            serviceName: partition
            servicePort: 80
          path: /api/partition/v1/*
        - backend:
            serviceName: indexer
            servicePort: 80
          path: /api/indexer/v2/*
        - backend:
            serviceName: search
            servicePort: 80
          path: /api/search/v2/*
        - backend:
            serviceName: delivery
            servicePort: 80
          path: /api/delivery/v2/*
        - backend:
            serviceName: schema
            servicePort: 80
          path: /api/schema-service/v1/*
        - backend:
            serviceName: register
            servicePort: 80
          path: /api/register/v1/*
        - backend:
            serviceName: file
            servicePort: 80
          path: /api/file/*
        - backend:
            serviceName: workflow
            servicePort: 80
          path: /api/workflow/*
        - backend:
            serviceName: notification
            servicePort: 80
          path: /api/notification/v1/*
        - backend:
            serviceName: entitlements
            servicePort: 80
          path: /api/entitlements/v2/*
        - backend:
            serviceName: well-delivery-ddms
            servicePort: 80
          path: /api/well-delivery/*
        - backend:
            serviceName: policy
            servicePort: 80
          path: /api/policy/*
        - backend:
            serviceName: dataset
            servicePort: 80
          path: /api/dataset/v1/*
        - backend:
            serviceName: wks
            servicePort: 80
          path: /api/wks-service/v1/*