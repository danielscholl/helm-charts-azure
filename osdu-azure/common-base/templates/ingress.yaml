{{- $namespace := .Release.Namespace }}
{{- $svcPort := .Values.global.service.port -}}
{{- $release := .Release.name -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: common-ingress
  namespace: {{ $namespace }}
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
    appgw.ingress.kubernetes.io/request-timeout: "300"
    appgw.ingress.kubernetes.io/connection-draining: "true"
    appgw.ingress.kubernetes.io/connection-draining-timeout: "30"
    {{- if .Values.global.ingress.enableKeyvaultCert }}
    appgw.ingress.kubernetes.io/appgw-ssl-certificate: "appgw-ssl-cert"
    {{- else }}
    cert-manager.io/cluster-issuer: {{ .Values.global.ingress.issuer }}
    cert-manager.io/acme-challenge-type: http01
    {{- end }}
spec:
  {{- if not .Values.global.ingress.enableKeyvaultCert }}
  tls:
  - hosts:
    - {{ .Values.global.ingress.dns }}
    secretName: osdu-certificate
  {{- end }}
  rules:
    - host: {{ .Values.global.ingress.dns }}
      http:
        paths:
        {{- range .Values.configuration }}
        - path: {{ .path }}
          pathType: ImplementationSpecific
          backend:
            service:
              name: {{ .service }}
              port:
                number: {{ $svcPort }}
        {{- end }}
        - path: /api/storage/v2/*
          pathType: ImplementationSpecific
          backend:
            service:
              name: storage
              port:
                number: 80
        - backend:
            service:
              name: default
              port:
                number: 80
          path: /*
          pathType: ImplementationSpecific
        - backend:
            service:
              name: legal
              port:
                number: 80
          path: /api/legal/v1/*
          pathType: ImplementationSpecific
        - backend:
            service:
              name: crs-catalog
              port:
                number: 80
          path: /api/crs/catalog/*
          pathType: ImplementationSpecific
        - backend:
            service:
              name: crs-conversion
              port:
                number: 80
          path: /api/crs/converter/*
          pathType: ImplementationSpecific
        - backend:
            service:
              name: unit
              port:
                number: 80
          path: /api/unit/*
          pathType: ImplementationSpecific
        - backend:
            service:
              name: partition
              port:
                number: 80
          path: /api/partition/v1/*
          pathType: ImplementationSpecific
        - backend:
            service:
              name: indexer
              port:
                number: 80
          path: /api/indexer/v2/*
          pathType: ImplementationSpecific
        - backend:
            service:
              name: search
              port:
                number: 80
          path: /api/search/v2/*
          pathType: ImplementationSpecific
        - backend:
            service:
              name: delivery
              port:
                number: 80
          path: /api/delivery/v2/*
          pathType: ImplementationSpecific
        - backend:
            service:
              name: schema
              port:
                number: 80
          path: /api/schema-service/v1/*
          pathType: ImplementationSpecific
        - backend:
            service:
              name: register
              port:
                number: 80
          path: /api/register/v1/*
          pathType: ImplementationSpecific
        - backend:
            service:
              name: file
              port:
                number: 80
          path: /api/file/*
          pathType: ImplementationSpecific
        - backend:
            service:
              name: workflow
              port:
                number: 80
          path: /api/workflow/*
          pathType: ImplementationSpecific
        - backend:
            service:
              name: notification
              port:
                number: 80
          path: /api/notification/v1/*
          pathType: ImplementationSpecific
        - backend:
            service:
              name: entitlements
              port:
                number: 80
          path: /api/entitlements/v2/*
        - backend:
            service:
              name: well-delivery-ddms
              port:
                number: 80
          path: /api/well-delivery/*
          pathType: ImplementationSpecific
        - backend:
            service:
              name: policy
              port:
                number: 80
          path: /api/policy/*
          pathType: ImplementationSpecific
        - backend:
            service:
              name: dataset
              port:
                number: 80
          path: /api/dataset/v1/*
          pathType: ImplementationSpecific
        - backend:
            service:
              name: wks
              port:
                number: 80
          path: /api/wks-service/v1/*
          pathType: ImplementationSpecific