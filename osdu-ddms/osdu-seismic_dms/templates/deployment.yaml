{{- $namespace := .Release.Namespace }}
{{- $pullPolicy := .Values.pullPolicy -}}
{{- $servicePort := .Values.service.port -}}
{{- $replicaCount := .Values.replicaCount -}}
{{- $isAutoscalingEnabled := .Values.global.isAutoscalingEnabled}}
{{- $sidecarImage := .Values.sidecarImage.repo}}
{{- $sidecarTag := .Values.sidecarImage.tag}}
{{- $nodepool := .Values.global.nodepool}}
{{- $defaultNodepool := .Values.global.defaultNodepool }}
{{- $configMap := .Values.configMap -}}
{{- $version := .Chart.AppVersion -}}
{{- $release := .Release.Name }}
{{- range .Values.configuration }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .service }}
  namespace: {{ $namespace }}
spec:
  replicas: {{ .replicaCount | default $replicaCount }}
  selector:
    matchLabels:
      app: {{ .service }}
  template:
    metadata:
      labels:
        app: {{ .service }}
        aadpodidbinding: osdu-identity
      annotations:
        prometheus.io/path: /seistore-svc/api/v3/metrics
        prometheus.io/port: "80"
        prometheus.io/scrape: "true"
    spec:
{{- if $isAutoscalingEnabled }}
      nodeSelector:
        agentpool: {{ $nodepool }}
{{- else if $defaultNodepool }}
      nodeSelector:
        agentpool: {{ $defaultNodepool }}
{{- end }}
      volumes:
      {{- if .keyvault }}
        - name: azure-keyvault
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: azure-keyvault
      {{- end }}
      {{- range .pvc }}
        - name: {{ .volume }}
          persistentVolumeClaim:
            claimName: {{ .name }}-pvc
      {{- end }}
      containers:
        - name: sidecar
          image: {{ $sidecarImage }}:{{ $sidecarTag }}
          livenessProbe:
            tcpSocket:
              port: 7138
            initialDelaySeconds: 20
            timeoutSeconds: 30
            periodSeconds: 60
          readinessProbe:
            tcpSocket:
              port: 7138
            initialDelaySeconds: 20
            timeoutSeconds: 30
            periodSeconds: 60  
          ports:
            - protocol: TCP
              containerPort: 7138
          envFrom:
            - configMapRef:
                name: seistore-svc-sidecar-properties
        - name: {{ .service }}
          {{- if hasPrefix "<azure_acr>/" .repository }}
          {{- $repo := .repository | replace "<azure_acr>/" "msosdu.azurecr.io/" }}
          image: {{ $repo }}:{{ .tag | default $version }}
          {{- else }}
          image: {{ .repository }}:{{ .tag | default $version }}
          {{- end }}
          imagePullPolicy: {{ $pullPolicy | default "Always" }}
          ports:
            - name: http
              containerPort: {{ $servicePort }}
              protocol: TCP
          {{- if .probe }}
          readinessProbe:
            httpGet:
              path: {{ .probe }}
              port: 80
            initialDelaySeconds: 20
          {{- end }}
          resources:
          {{- if .request }}
            requests:
              cpu: {{ .request.cpu | quote }}
          {{- end }}
          {{- if .limit }}
            limits:
              cpu: {{ .limit.cpu | quote }}
          {{- end }}
          volumeMounts:
          {{- if .keyvault }}
          - name: azure-keyvault
            mountPath: "/mnt/azure-keyvault"
            readOnly: true
          {{- end }}
          {{- range .mount }}
          - name: {{ .name }}
            mountPath: {{ .path }}
          {{- end }}
          {{- if $configMap }}
          envFrom:
            - configMapRef:
                name: {{ $configMap }}
          {{- end }}
          {{- if .env }}
          env:
            {{- range .env }}
            - name: {{ .name }}
              {{- if .value }}
              value: {{ .value | quote }}
              {{- end }}
              {{- if .config }}
              valueFrom:
                configMapKeyRef:
                  name: {{ .config.name }}
                  key: {{ .config.key | quote }}
              {{- end }}
              {{- if .secret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .secret.name | quote }}
                  key: {{ .secret.key | quote }}
              {{- end }}
            {{- end }}
          {{- end }}


---
{{- end }}
